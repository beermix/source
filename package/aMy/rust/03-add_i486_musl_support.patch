--- a/compiler/rustc_target/src/spec/mod.rs
+++ b/compiler/rustc_target/src/spec/mod.rs
@@ -665,6 +665,7 @@ supported_targets! {
 
     ("mips64-openwrt-linux-musl", mips64_openwrt_linux_musl),
     ("mips-openwrt-linux-musl", mips_openwrt_linux_musl),
+    ("i486-openwrt-linux-musl", i486_openwrt_linux_musl),
 }
 
 /// Everything `rustc` knows about how to compile for a specific target.
--- /dev/null
+++ b/compiler/rustc_target/src/spec/i486_openwrt_linux_musl.rs
@@ -0,0 +1,19 @@
+use crate::spec::{LinkerFlavor, Target};
+
+pub fn target() -> Target {
+    let mut base = super::linux_musl_base::opts();
+    base.cpu = "i486".to_string();
+    base.max_atomic_width = Some(32);
+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push("-m32".to_string());
+    base.stack_probes = true;
+    base.static_position_independent_executables = true;
+
+    Target {
+        llvm_target: "i486-unknown-linux-musl".to_string(),
+        pointer_width: 32,
+        data_layout: "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
+            .to_string(),
+        arch: "i486".to_string(),
+        options: base,
+    }
+}
