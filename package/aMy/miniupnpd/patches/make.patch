diff -Naur miniupnpd-2.2.0-RC1-orig/Makefile.bsd miniupnpd-2.2.0-RC1/Makefile.bsd
--- miniupnpd-2.2.0-RC1-orig/Makefile.bsd	2020-06-28 08:30:30.924548974 +0300
+++ miniupnpd-2.2.0-RC1/Makefile.bsd	2020-06-28 08:30:44.408591604 +0300
@@ -1,264 +1,215 @@
-# $Id: Makefile.bsd,v 1.102 2020/06/06 17:52:30 nanard Exp $
+# $Id: Makefile.linux,v 1.108 2020/06/06 17:52:31 nanard Exp $
 # MiniUPnP project
+# (c) 2006-2020 Thomas Bernard
 # http://miniupnp.free.fr/ or https://miniupnp.tuxfamily.org/
-# Author: Thomas Bernard
-#
-# Makefile for miniupnpd (MiniUPnP daemon)
-#
-# This Makefile should work for *BSD and SunOS/Solaris.
-# On Mac OS X, use "bsdmake" to build.
-# This Makefile is NOT compatible with GNU Make.
-# Linux users, please use Makefile.linux
+# Author : Thomas Bernard
+# for use with GNU Make
 #
 # options can be passed to configure through CONFIG_OPTIONS :
 # $ CONFIG_OPTIONS="--ipv6 --igd2" make
 #
-
-CFLAGS ?= -pipe -Os
-#CFLAGS = -pipe -O -g -DDEBUG
-#CFLAGS += -ansi
+# To install use :
+# $ DESTDIR=/dummyinstalldir make install
+# or :
+# $ INSTALLPREFIX=/usr/local make install
+# or :
+# $ make install
+# (default INSTALLPREFIX is /usr)
+#
+# if your system hasn't iptables libiptc headers and binary correctly
+# installed, you need to get iptables sources from http://netfilter.org/
+# ./configure them and build them then miniupnpd will build using :
+# $ IPTABLESPATH=/path/to/iptables-1.4.1 make
+#
+CONFIG_OPTIONS ?= $(cat .configure.cache)
+CONFIG_OPTIONS += --firewall=iptables
+#CFLAGS = -O -g -DDEBUG
+CFLAGS ?= -Os
+CFLAGS += -fno-strict-aliasing
+CFLAGS += -fno-common
+CFLAGS += -fstack-protector -fPIE
+CFLAGS += -D_FORTIFY_SOURCE=2
+CPPFLAGS += -D_GNU_SOURCE
 CFLAGS += -Wall
-CFLAGS += -W
-CFLAGS += -Wstrict-prototypes
-#CFLAGS += -Wdeclaration-after-statement
+CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
 #CFLAGS += -Wno-missing-field-initializers
-CFLAGS += -fno-common
+#CFLAGS += -ansi	# iptables headers does use typeof which is a gcc extension
+LDFLAGS += -Wl,-z,now -Wl,-z,relro -pie
 CC ?= gcc
 RM = rm -f
-MV = mv
 INSTALL = install
-STRIP = strip
+STRIP ?= strip
+PKG_CONFIG ?= pkg-config
+CP = cp
 DOXYGEN ?= doxygen
 
-.ifndef CONFIG_OPTIONS
-CONFIG_OPTIONS != cat .configure.cache
-.endif
-
-# OSNAME and FWNAME are used for building OS or FW dependent code.
-OSNAME != uname -s
-ARCH != uname -m
-
-.ifndef FWNAME
-.include "bsdmake.inc"
-.endif
-
-# Solaris specific CFLAGS
-.if $(OSNAME) == "SunOS"
-CPPFLAGS += -DSOLARIS2=`uname -r | cut -d. -f2`
-.if $(ARCH) == "amd64"
-CFLAGS += -m64 -mcmodel=kernel -mno-red-zone -ffreestanding
-.elif $(ARCH) == "sparc64"
-CFLAGS += -m64 -mcmodel=medlow
-.endif
-.endif
-
-ISGITREPO != git rev-parse --is-inside-work-tree 2> /dev/null || echo "false"
-.if $(ISGITREPO) == "true"
-GITREF != git rev-parse --short HEAD
-GITBRANCH != git rev-parse --abbrev-ref HEAD
-CPPFLAGS += -DMINIUPNPD_GIT_REF=\"$(GITBRANCH)-$(GITREF)\"
-.endif
-
-STDOBJS = miniupnpd.o upnphttp.o upnpdescgen.o upnpsoap.o \
-          upnpredirect.o getifaddr.o daemonize.o upnpglobalvars.o \
-          options.o upnppermissions.o minissdp.o natpmp.o pcpserver.o \
-          upnpevents.o upnputils.o getconnstatus.o \
-          upnpstun.o \
-          upnppinhole.o asyncsendto.o portinuse.o
-OS_OBJS = getifstats.o ifacewatcher.o getroute.o
-PFOBJS = obsdrdr.o pfpinhole.o
-IPFOBJS = ipfrdr.o
-IPFWOBJS = ipfwrdr.o ipfwaux.o
-MISCOBJS = upnpreplyparse.o minixml.o
-
-ALLOBJS = $(STDOBJS) $(MISCOBJS)
-ALLSRCS := $(ALLOBJS:S/^/$(SRCDIR)\//:S/.o$/.c/)
-
-TESTGETIFSTATSOBJS = testgetifstats.o getifstats.o
-TESTGETROUTEOBJS = testgetroute.o upnputils.o getroute.o
-
-ALLOBJS += $(OS_OBJS)
-
-.if $(OSNAME) == "SunOS"
-ALLSRCS += $(SRCDIR)/solaris/getifstats.c
-.elif $(OSNAME) == "Darwin"
-ALLSRCS += $(SRCDIR)/mac/getifstats.c
-.else
-ALLSRCS += $(SRCDIR)/bsd/getifstats.c
-.endif
-ALLSRCS += $(SRCDIR)/bsd/ifacewatcher.c $(SRCDIR)/bsd/getroute.c
-
-.if $(FWNAME) == "pf"
-ALLOBJS += $(PFOBJS)
-ALLSRCS += $(PFOBJS:S/^/$(SRCDIR)\/pf\//:S/.o$/.c/)
-.elif $(FWNAME) == "ipfw"
-ALLOBJS += $(IPFWOBJS)
-ALLSRCS += $(IPFWOBJS:S/^/$(SRCDIR)\/ipfw\//:S/.o$/.c/)
-.else
-ALLOBJS += $(IPFOBJS)
-ALLSRCS += $(IPFOBJS:S/^/$(SRCDIR)\/ipf\//:S/.o$/.c/)
-.endif
+DEPFLAGS = -MM -MG -MT $(patsubst %.d,%.o,$@) -MT $@
+# -M : with system headers, -MM : without
+
+INSTALLPREFIX ?= $(PREFIX)/usr
+SBININSTALLDIR = $(INSTALLPREFIX)/sbin
+ETCINSTALLDIR = $(PREFIX)/etc/miniupnpd
+MANINSTALLDIR = $(INSTALLPREFIX)/share/man/man8
+
+include config.mk
+include $(SRCDIR)/gitrev.mk
+include $(SRCDIR)/objects.mk
+
+# sources in netfilter/ directory
+NETFILTEROBJS = iptcrdr.o iptpinhole.o nfct_get.o
+
+ALLOBJS = $(BASEOBJS) $(LNXOBJS) $(NETFILTEROBJS)
+
+DEP = $(ALLOBJS:.o=.d)
+
+NETFILTER_SCRIPTS = $(addprefix $(SRCDIR)/netfilter/, \
+	iptables_init.sh iptables_removeall.sh \
+	ip6tables_init.sh ip6tables_removeall.sh \
+	miniupnpd_functions.sh)
+
+ifneq ($(IPTABLES_PCFILE_FOUND),1)
+
+ifeq "$(wildcard /etc/gentoo-release )" ""
+LDLIBS ?= -liptc
+else # gentoo
+# the following is better, at least on gentoo with iptables 1.4.6
+# see http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=1618
+# and http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=2183
+LDLIBS ?= -lip4tc
+CPPFLAGS := -DIPTABLES_143 $(CPPFLAGS)
+endif
+
+endif # ifneq ($(IPTABLES_PCFILE_FOUND),1)
+
+#LDLIBS += -lnfnetlink
+
+# OpenWrt packager disables https server for IGD v2 and hardcodes libuuid support
+ifeq ($(TARGET_OPENWRT),)
+LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l libssl)
+
+TEST := $(shell $(PKG_CONFIG) --exists uuid && echo 1)
+ifeq ($(TEST),1)
+LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l uuid)
+else
+$(info please install uuid-dev package / libuuid)
+endif # ($(TEST),1)
+endif # ($(TARGET_OPENWRT,)
+
+GLIBC_VERSION := $(shell ldd --version | head -n 1 | sed 's/^.* //')
+GLIBC_VERSION_MAJOR = $(shell echo $(GLIBC_VERSION) | cut -f 1 -d . )
+GLIBC_VERSION_MINOR = $(shell echo $(GLIBC_VERSION) | cut -f 2 -d . )
+# clock_gettime() needs -lrt when glibc version < 2.17
+LDLIBS += $(shell if [ $(GLIBC_VERSION_MAJOR) -lt 2 ] \
+  || [ \( $(GLIBC_VERSION_MAJOR) -eq 2 \) -a \( $(GLIBC_VERSION_MINOR) -lt 17 \) ] ; \
+  then echo "-lrt" ; fi )
 
 TESTUPNPDESCGENOBJS = testupnpdescgen.o upnpdescgen.o
-TESTUPNPPERMISSIONSOBJS = testupnppermissions.o upnppermissions.o
-TESTGETIFADDROBJS = testgetifaddr.o getifaddr.o
-MINIUPNPDCTLOBJS = miniupnpdctl.o
-TESTASYNCSENDTOOBJS = testasyncsendto.o asyncsendto.o upnputils.o getroute.o
-TESTPORTINUSEOBJS = testportinuse.o portinuse.o getifaddr.o
-TESTMINISSDPOBJS = testminissdp.o minissdp.o upnputils.o upnpglobalvars.o \
-                   asyncsendto.o getroute.o
 
 EXECUTABLES = miniupnpd testupnpdescgen testgetifstats \
-              testupnppermissions miniupnpdctl \
-              testgetifaddr testgetroute testasyncsendto \
-              testportinuse testssdppktgen testminissdp
-
-.if $(OSNAME) == "Darwin"
-LIBS =
-.else
-LIBS = -lkvm
-.endif
-.if $(OSNAME) == "SunOS"
-LIBS += -lsocket -lnsl -lkstat -lresolv
-.endif
-
-LIBS += -lssl -lcrypto
-
-# set PREFIX variable to install in the wanted place
-
-INSTALLBINDIR = $(PREFIX)/sbin
-INSTALLETCDIR = $(PREFIX)/etc
-# INSTALLMANDIR = $(PREFIX)/man
-INSTALLMANDIR = /usr/share/man
+              testupnppermissions miniupnpdctl testgetifaddr \
+              testgetroute testasyncsendto testportinuse \
+              testssdppktgen testminissdp
+
+.PHONY:	all clean install depend dox
 
 all:	$(EXECUTABLES)
 
 clean:
+	$(RM) config.h
 	$(RM) $(ALLOBJS)
+	$(RM) $(DEP)
 	$(RM) $(EXECUTABLES)
-	$(RM) $(TESTUPNPDESCGENOBJS)
-	$(RM) $(TESTUPNPPERMISSIONSOBJS)
-	$(RM) $(TESTGETIFADDROBJS)
-	$(RM) $(MINIUPNPDCTLOBJS)
-	$(RM) $(TESTASYNCSENDTOOBJS)
-	$(RM) $(TESTPORTINUSEOBJS)
-	$(RM) $(TESTMINISSDPOBJS)
+	$(RM) testupnpdescgen.o testgetifstats.o
+	$(RM) testupnppermissions.o testgetifaddr.o
+	$(RM) testgetroute.o testasyncsendto.o
+	$(RM) testportinuse.o
+	$(RM) testminissdp.o
+	$(RM) testssdppktgen.o
+	$(RM) miniupnpdctl.o
 	$(RM) validateupnppermissions validategetifaddr validatessdppktgen
+	$(RM) -r dox/
 
-install:	miniupnpd genuuid
+install:	miniupnpd $(SRCDIR)/miniupnpd.8 miniupnpd.conf \
+	$(NETFILTER_SCRIPTS) \
+	$(SRCDIR)/linux/miniupnpd.init.d.script
 	$(STRIP) miniupnpd
-	$(INSTALL) -d $(DESTDIR)$(INSTALLBINDIR)
-	$(INSTALL) -m 755 miniupnpd $(DESTDIR)$(INSTALLBINDIR)
-	$(INSTALL) -d $(DESTDIR)$(INSTALLETCDIR)
-	$(INSTALL) -b miniupnpd.conf $(DESTDIR)$(INSTALLETCDIR)
-	# TODO : install man page correctly
-#	$(INSTALL) -d $(INSTALLMANDIR)
-#	$(INSTALL) miniupnpd.8 $(INSTALLMANDIR)/cat8/miniupnpd.0
-
-# genuuid is using the uuid cli tool available under OpenBSD 4.0 in
-# the uuid-1.5.0 package
-# any other cli tool returning a uuid on stdout should work.
-UUID != if which uuidgen 2>&1 > /dev/null; then \
-        echo `uuidgen` ; \
-        elif which uuid 2>&1 > /dev/null; then \
-        echo `uuid` ; \
-        else echo "00000000-0000-0000-0000-000000000000"; \
-        fi
-
-genuuid:
-	$(MV) miniupnpd.conf miniupnpd.conf.before
-	sed -e "s/^uuid=[-0-9a-fA-F]*/uuid=$(UUID)/" miniupnpd.conf.before > miniupnpd.conf
-	$(RM) miniupnpd.conf.before
-
-check:  validateupnppermissions validategetifaddr validatessdppktgen
+	$(INSTALL) -d $(DESTDIR)$(SBININSTALLDIR)
+	$(INSTALL) miniupnpd $(DESTDIR)$(SBININSTALLDIR)
+	$(INSTALL) -d $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) $(SRCDIR)/netfilter/iptables_init.sh $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) $(SRCDIR)/netfilter/iptables_removeall.sh $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) $(SRCDIR)/netfilter/ip6tables_init.sh $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) $(SRCDIR)/netfilter/ip6tables_removeall.sh $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) $(SRCDIR)/netfilter/miniupnpd_functions.sh $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) --mode=0644 -b $(SRCDIR)/miniupnpd.conf $(DESTDIR)$(ETCINSTALLDIR)
+	$(INSTALL) -d $(DESTDIR)$(PREFIX)/etc/init.d
+	$(INSTALL) $(SRCDIR)/linux/miniupnpd.init.d.script $(DESTDIR)$(PREFIX)/etc/init.d/miniupnpd
+	$(INSTALL) -d $(DESTDIR)$(MANINSTALLDIR)
+	$(INSTALL) --mode=0644 $(SRCDIR)/miniupnpd.8 $(DESTDIR)$(MANINSTALLDIR)
+	gzip -f $(DESTDIR)$(MANINSTALLDIR)/miniupnpd.8
+
+# genuuid is using the uuidgen CLI tool which is part of libuuid
+# from the e2fsprogs
+# 'cat /proc/sys/kernel/random/uuid' could be also used
+miniupnpd.conf:	$(SRCDIR)/miniupnpd.conf
+ifeq ($(TARGET_OPENWRT),)
+	sed -e "s/^uuid=[-0-9a-f]*/uuid=`(genuuid||uuidgen||uuid) 2>/dev/null`/" $< > $@.tmp
+else
+	sed -e "s/^uuid=[-0-9a-f]*/uuid=`($(STAGING_DIR_HOST)/bin/genuuid||$(STAGING_DIR_HOST)/bin/uuidgen||$(STAGING_DIR_HOST)/bin/uuid) 2>/dev/null`/" $< > $@.tmp
+endif
+	mv $@.tmp $@
+
+include $(SRCDIR)/check.mk
+
+miniupnpd:	$(BASEOBJS) $(LNXOBJS) $(NETFILTEROBJS)
+
+testupnpdescgen:	$(TESTUPNPDESCGENOBJS)
 
-validateupnppermissions: $(SRCDIR)/testupnppermissions.sh testupnppermissions
-	$(SRCDIR)/testupnppermissions.sh
-	touch $@
+testgetifstats:	testgetifstats.o getifstats.o
 
-validategetifaddr:	$(SRCDIR)/testgetifaddr.sh testgetifaddr
-	$(SRCDIR)/testgetifaddr.sh
-	touch $@
+testupnppermissions:	testupnppermissions.o upnppermissions.o
 
-validatessdppktgen:	testssdppktgen
-	./testssdppktgen
-	touch $@
+testgetifaddr:	testgetifaddr.o getifaddr.o
 
-depend:	$(ALLSRCS)
-	mkdep $(CPPFLAGS) $(.ALLSRC)
+testgetroute:	testgetroute.o getroute.o upnputils.o
 
-dox:	miniupnpd.doxyconf
-	$(DOXYGEN) $>
-
-miniupnpd: $(ALLOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(ALLOBJS) $(LIBS)
+testssdppktgen:	testssdppktgen.o
 
-# BSDmake :
-#	$(CC) $(LDFLAGS) -o $@ $> $(LIBS)
+testasyncsendto:	testasyncsendto.o asyncsendto.o upnputils.o \
+	getroute.o
 
-miniupnpdctl:	config.h $(MINIUPNPDCTLOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(MINIUPNPDCTLOBJS)
+testportinuse:	testportinuse.o portinuse.o getifaddr.o \
+	iptcrdr.o
 
-testupnpdescgen:	config.h $(TESTUPNPDESCGENOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTUPNPDESCGENOBJS) $(LIBS)
+testminissdp:	testminissdp.o minissdp.o upnputils.o upnpglobalvars.o \
+	asyncsendto.o getroute.o
 
-testgetifstats:	config.h $(TESTGETIFSTATSOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTGETIFSTATSOBJS) $(LIBS)
 
-testgetifaddr:	config.h $(TESTGETIFADDROBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTGETIFADDROBJS) $(LIBS)
+miniupnpdctl:	miniupnpdctl.o
 
-testupnppermissions:	config.h $(TESTUPNPPERMISSIONSOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTUPNPPERMISSIONSOBJS) $(LIBS)
+config.mk config.h:	$(SRCDIR)/configure $(SRCDIR)/VERSION
+	$(SHELL) $< $(CONFIG_OPTIONS)
 
-testgetroute:	config.h $(TESTGETROUTEOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTGETROUTEOBJS) $(LIBS)
+depend:	$(DEP)
 
-testasyncsendto:	config.h $(TESTASYNCSENDTOOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTASYNCSENDTOOBJS)
+%.d:	$(SRCDIR)/%.c
+	$(CC) $(CPPFLAGS) $(DEPFLAGS) -o $@ $<
 
-testportinuse:	config.h $(TESTPORTINUSEOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTPORTINUSEOBJS) $(LIBS)
+dox:	$(SRCDIR)/miniupnpd.doxyconf
+	(cat $< ; echo "INPUT=$(SRCDIR)" ) | $(DOXYGEN) -
 
-testminissdp:	config.h $(TESTMINISSDPOBJS)
-	$(CC) $(LDFLAGS) -o $@ $(TESTMINISSDPOBJS) $(LIBS)
+%.o:	$(SRCDIR)/%.c
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
 
-testssdppktgen:	testssdppktgen.o
-	$(CC) $(LDFLAGS) -o $@ $(.ALLSRC) $(LIBS)
+%.o:	$(SRCDIR)/linux/%.c
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
 
-# gmake :
-#	$(CC) $(CFLAGS) -o $@ $^
-# BSDmake :
-#	$(CC) $(CFLAGS) -o $@ $>
-
-config.h:	$(SRCDIR)/configure $(SRCDIR)/VERSION
-	$(SRCDIR)/configure $(CONFIG_OPTIONS)
-
-$(STDOBJS) $(MISCOBJS):	$(SRCDIR)/$(@:.o=.c)
-$(PFOBJS):	$(SRCDIR)/pf/$(@:.o=.c)
-$(IPFOBJS):	$(SRCDIR)/ipf/$(@:.o=.c)
-$(IPFWOBJS):	$(SRCDIR)/ipfw/$(@:.o=.c)
-
-.if $(OSNAME) == "SunOS"
-getifstats.o:	$(SRCDIR)/solaris/getifstats.c
-.elif $(OSNAME) == "Darwin"
-getifstats.o:	$(SRCDIR)/mac/getifstats.c
-.else
-getifstats.o:	$(SRCDIR)/bsd/getifstats.c
-.endif
-ifacewatcher.o getroute.o:	$(SRCDIR)/bsd/$(@:.o=.c)
-
-# make(1) specifies that $ is escaped with a backslash,
-# not a preceding $ as usual, but FreeBSD 12.1 make does otherwise
-.if $(OSNAME) == "FreeBSD"
-$(EXECUTABLES:S/$$/.o/):	$(SRCDIR)/$(@:.o=.c)
-.else
-$(EXECUTABLES:S/\$/.o/):	$(SRCDIR)/$(@:.o=.c)
-.endif
-
-.SUFFIXES:	.o .c
-.c.o:
-	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<
+%.o:	$(SRCDIR)/netfilter/%.c
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
 
-#	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $(.TARGET) $(.IMPSRC)
+print-%:
+	@echo "$* = $($*)"
 
+ifneq ($(MAKECMDGOALS),clean)
+-include $(DEP)
+endif
