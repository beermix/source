--- a/util-linux/hwclock.c
+++ b/util-linux/hwclock.c
@@ -34,6 +34,7 @@
 
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
+#include <sys/syscall.h>
 #include <sys/utsname.h>
 #include "rtc_.h"
 
@@ -49,6 +60,10 @@
  */
 #define SHOW_HWCLOCK_DIFF 0
 
+/* musl 1.2.0+ does not have SYS_settimeofday */
+#ifndef SYS_settimeofday
+#define SYS_settimeofday	SYS_settimeofday_time32
+#endif
 
 #if !SHOW_HWCLOCK_DIFF
 # define read_rtc(pp_rtcname, sys_tv, utc) read_rtc(pp_rtcname, utc)
@@ -129,8 +134,10 @@ static void to_sys_clock(const char **pp_rtcname, int utc)
 	 */
 	tz.tz_dsttime = 0;
 
-	/* glibc v2.31+ returns an error if both args are non-NULL */
-	if (settimeofday(NULL, &tz))
+	/* glibc v2.31+ returns an error if both args are non-NULL
+	 * musl completely ignores the tz parameter
+	 */
+	if (syscall(SYS_settimeofday, NULL, &tz))
 		bb_simple_perror_msg_and_die("settimeofday");
 
 	tv.tv_sec = read_rtc(pp_rtcname, NULL, utc);
@@ -288,8 +295,10 @@ static void set_system_clock_timezone(int utc)
 	if (!utc)
 		tv.tv_sec += tz.tz_minuteswest * 60;
 
-	/* glibc v2.31+ returns an error if both args are non-NULL */
-	if (settimeofday(NULL, &tz))
+	/* glibc v2.31+ returns an error if both args are non-NULL
+	 * musl completely ignores the tz parameter
+	 */
+	if (syscall(SYS_settimeofday, NULL, &tz))
 		bb_simple_perror_msg_and_die("settimeofday");
 	if (settimeofday(&tv, NULL))
 		bb_simple_perror_msg_and_die("settimeofday");
