diff --git a/include/ostream_helpers b/include/ostream_helpers
index f4d33f9..47e3ad9 100644
--- a/include/ostream_helpers
+++ b/include/ostream_helpers
@@ -54,42 +54,30 @@ namespace std{
 		static void printout(basic_ostream<char, traits >& stream, const signed long int n)
 		{
 			char buffer[20];
-			const char * c_ld = "%ld";
-			const char * c_lo = "%lo";
-			const char * c_lX = "%lX";
-			const char * c_lx = "%lx";
-			const char * c_hashlo = "%#lo";
-			const char * c_hashlX = "%#lX";
-			const char * c_hashlx = "%#lx";
-
-			const char * formatString=0;
 
 			if( stream.flags() & ios_base::dec){
-				formatString = c_ld;
+				stream.printout(buffer, snprintf(buffer, 20, "%ld", n) );
 			}else if( stream.flags() & ios_base::oct){
 				if( stream.flags() & ios_base::showbase){
-					formatString = c_hashlo;
+					stream.printout(buffer, snprintf(buffer, 20, "%#lo", n) );
 				}else{
-					formatString = c_lo;
+					stream.printout(buffer, snprintf(buffer, 20, "%lo", n) );
 				}
 			}else if (stream.flags() & ios_base::hex){
 				if(stream.flags() & ios_base::showbase){
 					if(stream.flags() & ios_base::uppercase){
-						formatString = c_hashlX;
+						stream.printout(buffer, snprintf(buffer, 20, "%#lX", n) );
 					}else{
-						formatString = c_hashlx;
+						stream.printout(buffer, snprintf(buffer, 20, "%#lx", n) );
 					}
 				}else{
 					if(stream.flags() & ios_base::uppercase){
-						formatString = c_lX;
+						stream.printout(buffer, snprintf(buffer, 20, "%lX", n) );
 					}else{
-						formatString = c_lx;
+						stream.printout(buffer, snprintf(buffer, 20, "%lx", n) );
 					}
 				}
 			}
-
-			stream.printout(buffer, snprintf(buffer, 20, formatString, n) );
-
 			if(stream.flags() & ios_base::unitbuf){
 				stream.flush();
 			}
@@ -102,40 +90,30 @@ namespace std{
 		static void printout(basic_ostream<char, traits >& stream, const unsigned long int n)
 		{
 			char buffer[20];
-			const char * c_lo = "%lo";
-			const char * c_lu = "%lu";
-			const char * c_lX = "%lX";
-			const char * c_lx = "%lx";
-			const char * c_hashlo = "%#lo";
-			const char * c_hashlX = "%#lX";
-			const char * c_hashlx = "%#lx";
-			const char * formatString=0;
 
 			if( stream.flags() & ios_base::dec){
-				formatString = c_lu;
+				stream.printout(buffer, snprintf(buffer, 20, "%lu", n));
 			}else if( stream.flags() & ios_base::oct){
 				if( stream.flags() & ios_base::showbase){
-					formatString = c_hashlo;
+					stream.printout(buffer, snprintf(buffer, 20, "%#lo", n));
 				}else{
-					formatString = c_lo;
+					stream.printout(buffer, snprintf(buffer, 20, "%lo", n));
 				}
 			}else if (stream.flags() & ios_base::hex){
 				if(stream.flags() & ios_base::showbase){
 					if(stream.flags() & ios_base::uppercase){
-						formatString = c_hashlX;
+						stream.printout(buffer, snprintf(buffer, 20, "%#lX", n));
 					}else{
-						formatString = c_hashlx;
+						stream.printout(buffer, snprintf(buffer, 20, "%#lx", n));
 					}
 				}else{
 					if(stream.flags() & ios_base::uppercase){
-						formatString = c_lX;
+						stream.printout(buffer, snprintf(buffer, 20, "%lX", n));
 					}else{
-						formatString = c_lx;
+						stream.printout(buffer, snprintf(buffer, 20, "%lx", n));
 					}
 				}
 			}
-
-			stream.printout(buffer, snprintf(buffer, 20, formatString, n));
 			if(stream.flags() & ios_base::unitbuf){
 				stream.flush();
 			}
@@ -149,41 +127,30 @@ namespace std{
 		static void printout(basic_ostream<char, traits >& stream, const signed long long int n)
 		{
 			char buffer[28];
-			const char * lld = "%lld";
-			const char * llo = "%llo";
-			const char * llX = "%llX";
-			const char * llx = "%llx";
-			const char * hashllo = "%#llo";
-			const char * hashllX = "%#llX";
-			const char * hashllx = "%#llx";
-			const char * formatString=0;
 
 			if( stream.flags() & ios_base::dec){
-				formatString = lld;
+				stream.printout(buffer, snprintf(buffer, 27, "lld", n) );
 			}else if( stream.flags() & ios_base::oct){
 				if( stream.flags() & ios_base::showbase){
-					formatString = hashllo;
+					stream.printout(buffer, snprintf(buffer, 27, "%#llo", n) );
 				}else{
-					formatString = llo;
+					stream.printout(buffer, snprintf(buffer, 27, "%llo", n) );
 				}
 			}else if (stream.flags() & ios_base::hex){
 				if(stream.flags() & ios_base::showbase){
 					if(stream.flags() & ios_base::uppercase){
-						formatString = hashllX;
+						stream.printout(buffer, snprintf(buffer, 27, "%#llX", n) );
 					}else{
-						formatString = hashllx;
+						stream.printout(buffer, snprintf(buffer, 27, "%#llx", n) );
 					}
 				}else{
 					if(stream.flags() & ios_base::uppercase){
-						formatString = llX;
+						stream.printout(buffer, snprintf(buffer, 27, "%llX", n) );
 					}else{
-						formatString = llx;
+						stream.printout(buffer, snprintf(buffer, 27, "%llx", n) );
 					}
 				}
 			}
-
-			stream.printout(buffer, snprintf(buffer, 27, formatString, n) );
-
 			if(stream.flags() & ios_base::unitbuf){
 				stream.flush();
 			}
@@ -195,41 +162,30 @@ namespace std{
 		static void printout(basic_ostream<char, traits >& stream, const unsigned long long int n)
 		{
 			char buffer[28];
-			const char * llo = "%llo";
-			const char * llu = "%llu";
-			const char * llX = "%llX";
-			const char * llx = "%llx";
-			const char * hashllo = "%#llo";
-			const char * hashllX = "%#llX";
-			const char * hashllx = "%#llx";
-			const char * formatString=0;
 
 			if( stream.flags() & ios_base::dec){
-				formatString = llu;
+				stream.printout(buffer, snprintf(buffer, 27, "%llu", n) );
 			}else if( stream.flags() & ios_base::oct){
 				if( stream.flags() & ios_base::showbase){
-					formatString = hashllo;
+					stream.printout(buffer, snprintf(buffer, 27, "%#llo", n) );
 				}else{
-					formatString = llo;
+					stream.printout(buffer, snprintf(buffer, 27, "%llo", n) );
 				}
 			}else if (stream.flags() & ios_base::hex){
 				if(stream.flags() & ios_base::showbase){
 					if(stream.flags() & ios_base::uppercase){
-						formatString = hashllX;
+						stream.printout(buffer, snprintf(buffer, 27, "%#llX", n) );
 					}else{
-						formatString = hashllx;
+						stream.printout(buffer, snprintf(buffer, 27, "%#llx", n) );
 					}
 				}else{
 					if(stream.flags() & ios_base::uppercase){
-						formatString = llX;
+						stream.printout(buffer, snprintf(buffer, 27, "%llX", n) );
 					}else{
-						formatString = llx;
+						stream.printout(buffer, snprintf(buffer, 27, "%llx", n) );
 					}
 				}
 			}
-
-			stream.printout(buffer, snprintf(buffer, 27, formatString, n) );
-
 			if(stream.flags() & ios_base::unitbuf){
 				stream.flush();
 			}
