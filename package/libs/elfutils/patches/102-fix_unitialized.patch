--- a/libdw/dwarf_getsrclines.c
+++ b/libdw/dwarf_getsrclines.c
@@ -193,6 +193,41 @@ read_srclines (Dwarf *dbg,
   struct dirlist dirstack[MAX_STACK_DIRS];
   struct dirlist *dirarray = dirstack;
 
+  /* File index zero doesn't exist for DWARF < 5.  Files are indexed
+     starting from 1.  But for DWARF5 they are indexed starting from
+     zero, but the default index is still 1.  In both cases the
+     "first" file is special and refers to the main compile unit file,
+     equal to the DW_AT_name of the DW_TAG_compile_unit.  */
+  struct filelist null_file =
+    {
+      .info =
+      {
+	.name = "???",
+	.mtime = 0,
+	.length = 0
+      },
+      .next = NULL
+    };
+  struct filelist *filelist = &null_file;
+  nfilelist = 1;
+
+  /* Allocate memory for a new file.  For the first MAX_STACK_FILES
+     entries just return a slot in the preallocated stack array.
+     This is slightly complicated because in DWARF < 5 new files could
+     be defined with DW_LNE_define_file after the normal file list was
+     read.  */
+  struct filelist flstack[MAX_STACK_FILES];
+#define NEW_FILE() ({							\
+  struct filelist *fl = (nfilelist < MAX_STACK_FILES			\
+			   ? &flstack[nfilelist]			\
+			   : malloc (sizeof (struct filelist)));	\
+  if (unlikely (fl == NULL))						\
+    goto no_mem;							\
+  ++nfilelist;								\
+  fl->next = filelist;							\
+  filelist = fl;							\
+  fl; })
+
   if (unlikely (linep + 4 > lineendp))
     {
     invalid_data:
@@ -430,41 +465,6 @@ read_srclines (Dwarf *dbg,
 	}
     }
 
-  /* File index zero doesn't exist for DWARF < 5.  Files are indexed
-     starting from 1.  But for DWARF5 they are indexed starting from
-     zero, but the default index is still 1.  In both cases the
-     "first" file is special and refers to the main compile unit file,
-     equal to the DW_AT_name of the DW_TAG_compile_unit.  */
-  struct filelist null_file =
-    {
-      .info =
-      {
-	.name = "???",
-	.mtime = 0,
-	.length = 0
-      },
-      .next = NULL
-    };
-  struct filelist *filelist = &null_file;
-  nfilelist = 1;
-
-  /* Allocate memory for a new file.  For the first MAX_STACK_FILES
-     entries just return a slot in the preallocated stack array.
-     This is slightly complicated because in DWARF < 5 new files could
-     be defined with DW_LNE_define_file after the normal file list was
-     read.  */
-  struct filelist flstack[MAX_STACK_FILES];
-#define NEW_FILE() ({							\
-  struct filelist *fl = (nfilelist < MAX_STACK_FILES			\
-			   ? &flstack[nfilelist]			\
-			   : malloc (sizeof (struct filelist)));	\
-  if (unlikely (fl == NULL))						\
-    goto no_mem;							\
-  ++nfilelist;								\
-  fl->next = filelist;							\
-  filelist = fl;							\
-  fl; })
-
   /* Now read the files.  */
   if (version < 5)
     {
--- a/libdwfl/ChangeLog
+++ b/libdwfl/ChangeLog
@@ -1,3 +1,7 @@
+2018-06-17  Luiz Angelo Daros de Luca  <luizluca@gmail.com>
+
+	* dwarf_getsrclines.c: Fix unitialized usage of filelist
+
 2018-06-04  Mark Wielaard  <mark@klomp.org>
 
 	* libdwflP.h (__libdwfl_addrsym): Remove function declaration.
