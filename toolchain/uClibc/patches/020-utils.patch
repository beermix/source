--- a/utils/Makefile.in
+++ b/utils/Makefile.in
@@ -17,7 +17,8 @@
     -I$(top_srcdir)/$(KERNEL_HEADERS) \
     -DNOT_IN_libc \
     -B$(top_builddir)lib \
-    -Wl,-rpath-link,$(top_builddir)lib
+    -Wl,-rpath-link,$(top_builddir)lib \
+    -Wl,--dynamic-linker=/opt/lib/ld-uClibc.so.0 -Wl,-rpath,/opt/lib
 
 ifeq ($(UCLIBC_BUILD_PIE),y)
 CFLAGS-utils-shared := $(PIEFLAG) $(LDPIEFLAG)
@@ -32,7 +33,7 @@
 CFLAGS-ldconfig += $(CFLAGS-utils-shared)
 endif
 
-CFLAGS-ldd := $(CFLAGS-utils-shared) -DBUILDING_LINKAGE
+CFLAGS-ldd := $(CFLAGS-utils-shared) -DBUILDING_LINKAGE -Wl,--dynamic-linker=/opt/lib/ld-uClibc.so.0 -Wl,-rpath,/opt/lib
 
 # Need CFLAGS-utils explicitly, because the source file is not located in utils
 CFLAGS-iconv := $(CFLAGS-utils) \
--- a/utils/ldd.c
+++ b/utils/ldd.c
@@ -463,9 +463,9 @@
 
 	/* Lastly, search the standard list of paths for the library.
 	   This list must exactly match the list in uClibc/ldso/ldso/dl-elf.c */
-	path = UCLIBC_RUNTIME_PREFIX "lib:" UCLIBC_RUNTIME_PREFIX "usr/lib"
+	path = "/opt/lib"
 #ifndef __LDSO_CACHE_SUPPORT__
-	    ":" UCLIBC_RUNTIME_PREFIX "usr/X11R6/lib"
+	    ":/opt/X11R6/lib"
 #endif
 	    ;
 	search_for_named_library(lib->name, buf, path);
@@ -707,7 +707,7 @@
 			pid_t pid;
 			int status;
 			static const char *const environment[] = {
-				"PATH=/usr/bin:/bin:/usr/sbin:/sbin",
+				"PATH=/opt/bin:/opt/sbin:/usr/bin:/bin:/usr/sbin:/sbin",
 				"SHELL=/bin/sh",
 				"LD_TRACE_LOADED_OBJECTS=1",
 				NULL
--- a/utils/ldconfig.c
+++ b/utils/ldconfig.c
@@ -949,10 +949,9 @@
 
 		/* look ma, no defaults */
 		if (!nodefault) {
-			scan_dir(UCLIBC_RUNTIME_PREFIX "lib");
-			scan_dir(UCLIBC_RUNTIME_PREFIX "usr/lib");
+			scan_dir("/opt/lib");
 #ifndef __LDSO_CACHE_SUPPORT__
-			scan_dir(UCLIBC_RUNTIME_PREFIX "usr/X11R6/lib");
+			scan_dir("/opt/X11R6/lib");
 #else
 			/* I guess the defaults aren't good enough */
 			if ((extpath = get_extpath())) {
@@ -963,8 +962,7 @@
 						while (cp[--len] == '/' && len)
 							cp[len] = 0;
 					/* we do the redundancy check only if cache usage is enabled */
-					if (strcmp(UCLIBC_RUNTIME_PREFIX "lib", cp) == 0
-					    || strcmp(UCLIBC_RUNTIME_PREFIX "usr/lib", cp) == 0) {
+					if (strcmp("/opt/lib", cp) == 0) {
 						if (verbose >= 0)
 							warnx("You should remove `%s' from `%s'", cp, LDSO_CONF);
 						continue;
