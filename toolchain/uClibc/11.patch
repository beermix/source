diff --git a/include/sys/stat.h b/include/sys/stat.h
index c06177dad..b6480bf97 100644
--- a/include/sys/stat.h
+++ b/include/sys/stat.h
@@ -393,9 +393,11 @@ extern int futimens (int __fd, const struct timespec __times[2]) __THROW;
 #undef _MKNOD_VER
 #define _MKNOD_VER 0
 
+#ifdef __UCLIBC_HAVE_STATX__
 #ifdef __USE_GNU
 # include <bits/statx.h>
 #endif
+#endif
 
 
 __END_DECLS
diff --git a/ldso/include/dl-syscall.h b/ldso/include/dl-syscall.h
index 55688e1c1..2e8bb3630 100644
--- a/ldso/include/dl-syscall.h
+++ b/ldso/include/dl-syscall.h
@@ -40,6 +40,8 @@ extern int _dl_errno;
 #include <sys/stat.h>
 #include <dl-string.h>
 
+#include <bits/uClibc_arch_features.h>
+#if defined __UCLIBC_HAVE_STATX__
 static __always_inline void
 __cp_stat_statx (struct stat *to, struct statx *from)
 {
@@ -64,6 +66,7 @@ __cp_stat_statx (struct stat *to, struct statx *from)
   to->st_blksize = from->stx_blksize;
 }
 #endif
+#endif
 
 #define AT_NO_AUTOMOUNT       0x800
 #define AT_EMPTY_PATH         0x1000 
diff --git a/ldso/ldso/or1k/dl-sysdep.h b/ldso/ldso/or1k/dl-sysdep.h
index d79249449..d838a50eb 100644
--- a/ldso/ldso/or1k/dl-sysdep.h
+++ b/ldso/ldso/or1k/dl-sysdep.h
@@ -36,8 +36,10 @@ do {									\
 #define ELF_TARGET "or1k"
 
 #define elf_machine_type_class(type) \
-  (((type) == R_OR1K_JMP_SLOT) * ELF_RTYPE_CLASS_PLT \
-   | ((type) == R_OR1K_COPY) * ELF_RTYPE_CLASS_COPY)
+  (((type) == R_OR1K_JMP_SLOT || (type) == R_OR1K_TLS_DTPMOD || \
+    (type) == R_OR1K_TLS_DTPOFF || \
+    (type) == R_OR1K_TLS_TPOFF) * ELF_RTYPE_CLASS_PLT \
+ | ((type) == R_OR1K_COPY) * ELF_RTYPE_CLASS_COPY)
 
 static inline Elf32_Addr *
 or1k_get_got (void)
diff --git a/ldso/ldso/or1k/elfinterp.c b/ldso/ldso/or1k/elfinterp.c
index 7fd0825ae..6b6589af5 100644
--- a/ldso/ldso/or1k/elfinterp.c
+++ b/ldso/ldso/or1k/elfinterp.c
@@ -249,11 +249,11 @@ _dl_do_reloc(struct elf_resolve *tpnt, struct r_scope_elem *scope,
 			*reloc_addr = tls_tpnt->l_tls_modid;
 			break;
 		case R_OR1K_TLS_DTPOFF:
-			*reloc_addr = symbol_addr;
+			*reloc_addr = symbol_addr + rpnt->r_addend;
 			break;
 		case R_OR1K_TLS_TPOFF:
 			CHECK_STATIC_TLS ((struct link_map *) tls_tpnt);
-			*reloc_addr = tls_tpnt->l_tls_offset + symbol_addr + rpnt->r_addend;
+			*reloc_addr = tls_tpnt->l_tls_offset + symbol_addr + rpnt->r_addend - TLS_TCB_SIZE;
 			break;
 #endif
 
diff --git a/libc/stdlib/malloc-standard/malloc.h b/libc/stdlib/malloc-standard/malloc.h
index 30a696e5a..f196a560f 100644
--- a/libc/stdlib/malloc-standard/malloc.h
+++ b/libc/stdlib/malloc-standard/malloc.h
@@ -23,6 +23,7 @@
 #include <stdlib.h>
 #include <sys/mman.h>
 #include <bits/uClibc_mutex.h>
+#include <bits/uClibc_page.h>
 
 
 
@@ -848,8 +849,11 @@ typedef struct malloc_chunk* mfastbinptr;
 */
 #define PROTECT_PTR(pos, ptr)     ((mchunkptr)((((size_t)pos) >> PAGE_SHIFT) ^ ((size_t)ptr)))
 #define REVEAL_PTR(pos, ptr)      PROTECT_PTR(pos, ptr)
-#define CHECK_PTR(P)    \
-  if (!aligned_OK(P))   \
+#define PTR_FOR_ALIGNMENT_CHECK(P) \
+    (MALLOC_ALIGNMENT == 2*(sizeof(size_t)) ? (P) : chunk2mem(P))
+
+#define CHECK_PTR(P)                            \
+  if (!aligned_OK(PTR_FOR_ALIGNMENT_CHECK(P)))  \
       abort();
 
 /*
diff --git a/libc/sysdeps/linux/common/statx_cp.c b/libc/sysdeps/linux/common/statx_cp.c
index 1a6253b4d..9f024eec8 100644
--- a/libc/sysdeps/linux/common/statx_cp.c
+++ b/libc/sysdeps/linux/common/statx_cp.c
@@ -15,10 +15,13 @@
    License along with the GNU C Library.  If not, see
    <http://www.gnu.org/licenses/>.  */
 
+#include <bits/uClibc_arch_features.h>
 #include <stddef.h>
 #include <string.h>
 #include <sys/stat.h>
 
+#if defined __UCLIBC_HAVE_STATX__
+
 #include <statx_cp.h>
 
 #if !defined(__NR_fstat64) || !defined(__NR_fstatat64)
@@ -70,3 +73,4 @@ __cp_stat_statx (struct stat *to, struct statx *from)
   to->st_blksize = from->stx_blksize;
 }
 #endif
+#endif
