diff --git a/src/process/posix_spawn.c b/src/process/posix_spawn.c
index ea5d2998..0849c71f 100644
--- a/src/process/posix_spawn.c
+++ b/src/process/posix_spawn.c
@@ -152,7 +152,7 @@ int __posix_spawnx(pid_t *restrict res, const char *restrict path,
 	char *const argv[restrict], char *const envp[restrict])
 {
 	pid_t pid;
-	char stack[1024];
+	char stack[1024+PATH_MAX];
 	int ec=0, cs;
 	struct args args;
 
diff --git a/src/regex/glob.c b/src/regex/glob.c
index 6f8425ca..85671985 100644
--- a/src/regex/glob.c
+++ b/src/regex/glob.c
@@ -100,9 +100,11 @@ static int match_in_dir(const char *d, const char *p, int flags, int (*errfunc)(
 			continue;
 		if (p2 && de->d_type && !S_ISDIR(de->d_type<<12) && !S_ISLNK(de->d_type<<12))
 			continue;
-		if (p2 && de->d_name[0]=='.' && !de->d_name[1])
-			continue;
-		if (p2 && de->d_name[0]=='.' && de->d_name[1]=='.' && !de->d_name[2])
+		/* With GLOB_PERIOD, don't allow matching . or .. unless
+		 * fnmatch would match them with FNM_PERIOD rules in effect. */
+		if (p2 && (flags & GLOB_PERIOD) && de->d_name[0]=='.'
+		    && (!de->d_name[1] || de->d_name[1]=='.' && !de->d_name[2])
+		    && fnmatch(p, de->d_name, fnm_flags | FNM_PERIOD))
 			continue;
 		if (*d) {
 			memcpy(name, d, l);
